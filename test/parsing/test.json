{
    "description": "tests of parsing",
    "tests": [
        {
            "description": "with equal delimiter",
            "$ref": "./test/parsing/files/delimiter.equal.valid.txt",
            "result": "./files/delimiter.equal.valid.json",
            "valid": true,
            "object": "result"
        },
        {
            "description": "with space delimiter",
            "$ref": "./test/parsing/files/delimiter.space.valid.txt",
            "result": "./files/delimiter.space.valid.json",
            "valid": true,
            "object": "result"
        },
        {
            "description": "full test",
            "$ref": "./test/parsing/files/full.example.valid.txt",
            "result": "./files/full.example.valid.json",
            "config": "./config.json",
            "valid": true,
            "object": "result"
        },
        {
            "description": "usage haven't got path/file",
            "$ref": "./test/parsing/files/path.usage.absent.txt",
            "result": "./files/path.usage.absent.json",
            "valid": true,
            "object": "result"
        },
        {
            "description": "without sections in documentation",
            "$ref": "./test/parsing/files/sections.absent.valid.txt",
            "result": "./files/sections.absent.valid.json",
            "valid": true,
            "object": "result"
        }
    ]
}
